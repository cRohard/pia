{"remainingRequest":"/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@ngx-translate/core/index.js","dependencies":[{"path":"/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@ngx-translate/core/index.js","mtime":1504629112000},{"path":"/home/admin_sncf/core/workspace/rgpd/pia/node_modules/cache-loader/dist/cjs.js","mtime":1528983285433},{"path":"/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { NgModule } from \"@angular/core\";\nimport { TranslateLoader, TranslateFakeLoader } from \"./src/translate.loader\";\nimport { TranslateService } from \"./src/translate.service\";\nimport { MissingTranslationHandler, FakeMissingTranslationHandler } from \"./src/missing-translation-handler\";\nimport { TranslateParser, TranslateDefaultParser } from \"./src/translate.parser\";\nimport { TranslateCompiler, TranslateFakeCompiler } from \"./src/translate.compiler\";\nimport { TranslateDirective } from \"./src/translate.directive\";\nimport { TranslatePipe } from \"./src/translate.pipe\";\nimport { TranslateStore } from \"./src/translate.store\";\nimport { USE_STORE } from \"./src/translate.service\";\nimport { USE_DEFAULT_LANG } from \"./src/translate.service\";\nexport * from \"./src/translate.loader\";\nexport * from \"./src/translate.service\";\nexport * from \"./src/missing-translation-handler\";\nexport * from \"./src/translate.parser\";\nexport * from \"./src/translate.compiler\";\nexport * from \"./src/translate.directive\";\nexport * from \"./src/translate.pipe\";\nvar TranslateModule = /*@__PURE__*/ (function () {\n    function TranslateModule() {\n    }\n    /**\n     * Use this method in your root module to provide the TranslateService\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forRoot = function (config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                TranslateStore,\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forChild = function (config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    return TranslateModule;\n}());\nexport { TranslateModule };\n\n",{"version":3,"file":"/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@ngx-translate/core/index.js.post-build-optimizer.js","sourceRoot":"","sources":["/home/admin_sncf/core/workspace/rgpd/pia/node_modules/@ngx-translate/core/index.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { TranslateLoader, TranslateFakeLoader } from \"./src/translate.loader\";\nimport { TranslateService } from \"./src/translate.service\";\nimport { MissingTranslationHandler, FakeMissingTranslationHandler } from \"./src/missing-translation-handler\";\nimport { TranslateParser, TranslateDefaultParser } from \"./src/translate.parser\";\nimport { TranslateCompiler, TranslateFakeCompiler } from \"./src/translate.compiler\";\nimport { TranslateDirective } from \"./src/translate.directive\";\nimport { TranslatePipe } from \"./src/translate.pipe\";\nimport { TranslateStore } from \"./src/translate.store\";\nimport { USE_STORE } from \"./src/translate.service\";\nimport { USE_DEFAULT_LANG } from \"./src/translate.service\";\nexport * from \"./src/translate.loader\";\nexport * from \"./src/translate.service\";\nexport * from \"./src/missing-translation-handler\";\nexport * from \"./src/translate.parser\";\nexport * from \"./src/translate.compiler\";\nexport * from \"./src/translate.directive\";\nexport * from \"./src/translate.pipe\";\nvar TranslateModule = (function () {\n    function TranslateModule() {\n    }\n    /**\n     * Use this method in your root module to provide the TranslateService\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                TranslateStore,\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     * @param {TranslateModuleConfig} config\n     * @returns {ModuleWithProviders}\n     */\n    TranslateModule.forChild = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                TranslateService\n            ]\n        };\n    };\n    return TranslateModule;\n}());\nexport { TranslateModule };\nTranslateModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    TranslatePipe,\n                    TranslateDirective\n                ],\n                exports: [\n                    TranslatePipe,\n                    TranslateDirective\n                ]\n            },] },\n];\n/** @nocollapse */\nTranslateModule.ctorParameters = function () { return []; };\n"]}]}